{ Datei :  PLOTTER.INC

  enthaelt alle HP-GL (=Graphics Language) Plotter Kommandos.
  Ihr Aufruf und Gebrauch wird dokumentiert.
  Fuer weitere Informationen sei auf das HP Manual verwiesen:

  "Interfacing and Programming Manual"
   HP 7475A Graphics Plotter
   RS-232-C/CCITT V.24
   HP-IB Systems

}

type   str255  = string[255];

{========================    A N F A N G    ==============================}


{--------------------------------------------------------------------------}
{------------   Arc Absolut Instruction   ---------------------------------}
{--------------------------------------------------------------------------}

procedure AA(var xcoord,ycoord,angle,chordangle:real);
begin
  writeln(AUX,'AA',xcoord,',',ycoord,',',angle,',',chordangle,';');
end;

{--------------------------------------------------------------------------}
{------------   Arc Relative Instruction   --------------------------------}
{--------------------------------------------------------------------------}
procedure AR(var xinc,yinc,angle,chordangle:real);
begin
  writeln(AUX,'AR',xinc,',',yinc,',',angle,',',chordangle,';');
end;

{--------------------------------------------------------------------------}
{------------    Designate Alternate Character Set    ---------------------}
{--------------------------------------------------------------------------}
procedure CA(var n : integer);
begin
  writeln(AUX,'CA',n,';');
end;

{--------------------------------------------------------------------------}
{------------------   Circle Instruction    -------------------------------}
{--------------------------------------------------------------------------}
procedure CI(var radius,chordangle:real);
begin
  writeln(AUX,'CI',radius,',',chordangle,';');
end;

{--------------------------------------------------------------------------}
{------------    Character Plot Instruction   -----------------------------}
{--------------------------------------------------------------------------}
procedure CP(var spaces, lines : integer);
begin
  writeln(AUX,'CP',spaces,',',lines,';');
end;

{--------------------------------------------------------------------------}
{------------    Standard Character Set Instruction   ---------------------}
{--------------------------------------------------------------------------}
procedure CS(var m : integer);
begin
  writeln(AUX,'CS',m,';');
end;

{--------------------------------------------------------------------------}
{------------     Digitize Clear Instruction      -------------------------}
{--------------------------------------------------------------------------}
procedure DC;
begin
  writeln(AUX,'DC;');
end;

{--------------------------------------------------------------------------}
{------------     Default Plotter Einstellung     -------------------------}
{--------------------------------------------------------------------------}
procedure DF;
begin
  writeln(AUX,'DF;');
end;

{--------------------------------------------------------------------------}
{------------     Absolute Direction Instruction    -----------------------}
{--------------------------------------------------------------------------}
procedure DI(var run,rise:real);
begin
  writeln(AUX,'DI',run,',',rise,';');
end;

{--------------------------------------------------------------------------}
{------------     Digitize Point Instruction    ---------------------------}
{--------------------------------------------------------------------------}
procedure DP;
begin
  writeln(AUX,'DP;');
end;

{--------------------------------------------------------------------------}
{------------     Relative Direction Instruction    -----------------------}
{--------------------------------------------------------------------------}
procedure DR(var run, rise : real);
begin
  writeln(AUX,'DR',run,',',rise,';');
end;

{--------------------------------------------------------------------------}
{------------     Define Terminator Instruction     -----------------------}
{--------------------------------------------------------------------------}
procedure DT(var t : char);
begin
  writeln(AUX,'DT',t);
end;

{--------------------------------------------------------------------------}
{------------     Edge Rectangle Absolute Instruction     -----------------}
{--------------------------------------------------------------------------}
procedure EA(var xcoord, ycoord : real);
begin
  writeln(AUX,'EA',xcoord,',',ycoord,';');
end;

{--------------------------------------------------------------------------}
{------------     Edge Rectangle Relative Instruction     -----------------}
{--------------------------------------------------------------------------}
procedure ER(var xincr, yincr : real);
begin
  writeln(AUX,'ER',xincr,',',yincr,';');
end;

{--------------------------------------------------------------------------}
{--------------------     Edge Wedge Instruction     ----------------------}
{--------------------------------------------------------------------------}
procedure EW(var radius,start,angle,sweep_angle,chord_angle:real);
begin
  writeln(AUX,'EW',radius,',',start,',',angle,',',sweep_angle,',',chord_angle,';');
end;

{--------------------------------------------------------------------------}
{------------     Fill Type Instruction     -------------------------------}
{--------------------------------------------------------------------------}
procedure FT(var fill_type,angle : integer; spacing:real);
begin
  writeln(AUX,'FT',fill_type,',',spacing,',',angle,';');
end;

{--------------------------------------------------------------------------}
{------------     Input Mask Instruction    -------------------------------}
{--------------------------------------------------------------------------}
procedure IM(var E_mask,S_mask,P_mask : integer);
begin
  writeln(AUX,'IM',E_mask,',',S_mask,',',P_mask,';');
end;

{--------------------------------------------------------------------------}
{------------     Initialize Instruction    -------------------------------}
{--------------------------------------------------------------------------}
procedure INIT_PLOTTER;
begin
  writeln(AUX,'IN;');
end;

{--------------------------------------------------------------------------}
{------------     Input P1 and P2  Instruction    -------------------------}
{--------------------------------------------------------------------------}
procedure IP(var p1x,p1y,p2x,p2y : real);
begin
  writeln(AUX,'IP',p1x,',',p1y,',',p2x,',',p2y,';');
end;

{--------------------------------------------------------------------------}
{------------      Input Window Instruction     ---------------------------}
{--------------------------------------------------------------------------}
procedure IW(var xll,yll,xur,yur : real);
begin
  writeln(AUX,'IW',xll,',',yll,',',xur,',',yur,';');
end;

{--------------------------------------------------------------------------}
{--------------------    Label  Instruction     ---------------------------}
{--------------------------------------------------------------------------}
procedure LB(var char_string:str255; t : char);
begin
  writeln(AUX,'LB',char_string,',',t);
end;

{--------------------------------------------------------------------------}
{--------------------    Line Type Instruction    -------------------------}
{--------------------------------------------------------------------------}
procedure LT(var number: integer; length : real);
begin
  writeln(AUX,'LT',number,',',length);
end;

{--------------------------------------------------------------------------}
{------------    Output Actual Pos. & Pen Status Instruction    -----------}
{--------------------------------------------------------------------------}
procedure OA;
begin
  writeln(AUX,'OA;');
end;

{--------------------------------------------------------------------------}
{------------    Output Commanded Pos. & Pen Status Instruction    --------}
{--------------------------------------------------------------------------}
procedure OC;
begin
  writeln(AUX,'OC;');
end;

{--------------------------------------------------------------------------}
{------------    Output Digitized Point & Pen Status Instruction    -------}
{--------------------------------------------------------------------------}
procedure OD;
begin
  writeln(AUX,'OD;');
end;

{--------------------------------------------------------------------------}
{-------------------    Output Error Instruction    -----------------------}
{--------------------------------------------------------------------------}
procedure OE;
begin
  writeln(AUX,'OE;');
end;

{--------------------------------------------------------------------------}
{------------------    Output Factors Instruction    ----------------------}
{--------------------------------------------------------------------------}
procedure O_F;
begin
  writeln(AUX,'OF;');
end;

{--------------------------------------------------------------------------}
{----------------    Output Hard-clip Limits Instruction    ---------------}
{--------------------------------------------------------------------------}
procedure OH;
begin
  writeln(AUX,'OH;');
end;

{--------------------------------------------------------------------------}
{----------------    Output Identification Instruction    -----------------}
{--------------------------------------------------------------------------}
procedure OI;
begin
  writeln(AUX,'OI;');
end;

{--------------------------------------------------------------------------}
{---------------------    Output Options Instruction    -------------------}
{--------------------------------------------------------------------------}
procedure OO;
begin
  writeln(AUX,'OO;');
end;

{--------------------------------------------------------------------------}
{-------------------    Output P1 and P2 Instruction    -------------------}
{--------------------------------------------------------------------------}
procedure OP;
begin
  writeln(AUX,'OP;');
end;

{--------------------------------------------------------------------------}
{--------------------    Output Status Instruction    ---------------------}
{--------------------------------------------------------------------------}
procedure OS;
begin
  writeln(AUX,'OS;');
end;

{--------------------------------------------------------------------------}
{--------------------    Output Window Instruction    ---------------------}
{--------------------------------------------------------------------------}
procedure OW;
begin
  writeln(AUX,'OW;');
end;

{--------------------------------------------------------------------------}
{--------------------    Plot Absolute Instruction    ---------------------}
{--------------------------------------------------------------------------}
procedure PA(var x1,y1: real);
begin
  writeln(AUX,'PA',x1,',',y1,';');
end;

{--------------------------------------------------------------------------}
{--------------------     Pen Down Instruction    -------------------------}
{--------------------------------------------------------------------------}
procedure PD(var x1,y1 : real);
begin
  writeln(AUX,'PD',x1,',',y1,';');
end;

{--------------------------------------------------------------------------}
{--------------------     Plot Relative Instruction    --------------------}
{--------------------------------------------------------------------------}
procedure PR(var xincr,yincr : real);
begin
  writeln(AUX,'PR',xincr,',',yincr,';');
end;

{--------------------------------------------------------------------------}
{--------------------     Paper Size Instruction    -----------------------}
{--------------------------------------------------------------------------}
procedure PS(var size : real);
begin
  writeln(AUX,'PS',size);
end;

{--------------------------------------------------------------------------}
{--------------------     Pen Thickness Instruction    --------------------}
{--------------------------------------------------------------------------}
procedure PT(var thickness : real);
begin
  writeln(AUX,'PT',thickness);
end;

{--------------------------------------------------------------------------}
{------------------------     Pen Up Instruction    -----------------------}
{--------------------------------------------------------------------------}
procedure PU(var x1,y1 : real);
begin
  writeln(AUX,'PU',x1,',',y1,';');
end;

{--------------------------------------------------------------------------}
{-----------------   Shade Rectangle Absolute Instruction    --------------}
{--------------------------------------------------------------------------}
procedure RA(var xcoord,ycoord : real);
begin
  writeln(AUX,'RA',xcoord,',',ycoord,';');
end;

{--------------------------------------------------------------------------}
{-----------------   Rotate Coordinate System Instruction    --------------}
{--------------------------------------------------------------------------}
procedure RO(var angle : real);
begin
  writeln(AUX,'RO',angle,';');
end;

{--------------------------------------------------------------------------}
{-----------------   Shade Rectangle Relative Instruction    --------------}
{--------------------------------------------------------------------------}
procedure RR(var xincr, yincr : real);
begin
  writeln(AUX,'RR',xincr,',',yincr,';');
end;

{--------------------------------------------------------------------------}
{-----------------   Select Alternate Character Set   ---------------------}
{--------------------------------------------------------------------------}
procedure SA;
begin
  writeln(AUX,'SA;');
end;

{--------------------------------------------------------------------------}
{-----------------------   Scale Instruction    ---------------------------}
{--------------------------------------------------------------------------}
procedure SC(var xmin,xmax,ymin,ymax : real);
begin
  writeln(AUX,'SC',xmin,',',xmax,',',ymin,',',ymax,';');
end;

{--------------------------------------------------------------------------}
{---------------   Absolute Character Size Instruction    -----------------}
{--------------------------------------------------------------------------}
procedure SI(var width, height : real);
begin
  writeln(AUX,'SC',width,',',height,';');
end;

{--------------------------------------------------------------------------}
{-------------------   Character Slant Instruction    ---------------------}
{--------------------------------------------------------------------------}
procedure SL(var tan_delta : real);
begin
  writeln(AUX,'SL',tan_delta,';');
end;

{--------------------------------------------------------------------------}
{----------------------   Symbol Mode Instruction    ----------------------}
{--------------------------------------------------------------------------}
procedure SM(var ch : char);
begin
  writeln(AUX,'SM',ch,';');
end;

{--------------------------------------------------------------------------}
{----------------------   Pen Select Instruction    -----------------------}
{--------------------------------------------------------------------------}
procedure SP(var number : integer);
begin
  writeln(AUX,'SP',number,';');
end;

{--------------------------------------------------------------------------}
{----------------   Relative Character Size Instruction    ----------------}
{--------------------------------------------------------------------------}
procedure SR(var width, height : real);
begin
  writeln(AUX,'SR',width,',',height,';');
end;

{--------------------------------------------------------------------------}
{----------------   Select Standard Character Set Instruction    ----------}
{--------------------------------------------------------------------------}
procedure SS;
begin
  writeln(AUX,'SS;');
end;

{--------------------------------------------------------------------------}
{----------------------     Tick Length Instruction    --------------------}
{--------------------------------------------------------------------------}
procedure TL(var tp, tn : real);
begin
  writeln(AUX,'TL',tp,',',tn,';');
end;

{--------------------------------------------------------------------------}
{-----------------    User Defined Character Instruction    ---------------}
{--------------------------------------------------------------------------}
procedure UC(var pen_control : integer; xincr, yincr : real);
begin
  writeln(AUX,'UC',pen_control,',',xincr,',',yincr,';');
end;

{--------------------------------------------------------------------------}
{---------------------    Velocity Select Instruction    ------------------}
{--------------------------------------------------------------------------}
procedure VS(var pen_velocity : real);
begin
  writeln(AUX,'UC',pen_velocity,';');
end;

{--------------------------------------------------------------------------}
{------------------------    Shade Wedge Instruction    -------------------}
{--------------------------------------------------------------------------}
procedure WG(var radius : real; start_angle,sweep_angle,chord_angle : integer);
begin
  writeln(AUX,'WG',radius,',',start_angle,',',sweep_angle,',',chord_angle,';');
end;

{--------------------------------------------------------------------------}
{------------------------    X-Tick Instruction    ------------------------}
{--------------------------------------------------------------------------}
procedure XT;
begin
  writeln(AUX,'XT;');
end;

{--------------------------------------------------------------------------}
{------------------------    Y-Tick Instruction    ------------------------}
{--------------------------------------------------------------------------}
procedure YT;
begin
  writeln(AUX,'YT;');
end;

{========================    E  N  D  E    ===============================}
